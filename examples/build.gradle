/*
 * Copyright (c) 2024, WSO2 LLC. (http://www.wso2.com)
 *
 * WSO2 LLC. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import org.apache.tools.ant.taskdefs.condition.Os

description = 'Ballerina - LDAP Examples'

def ballerinaDist = "${project.rootDir}/target/ballerina-runtime"
def examples = ["access-directory-server"]
def graalvmFlag = ""

tasks.register('clean') {
    examples.forEach { example ->
        delete "${projectDir}/${example}/target"
        delete "${projectDir}/${example}/Dependencies.toml"
    }
}

task testExamples {
    if (project.hasProperty("balGraalVMTest")) {
        graalvmFlag = "--graalvm"
    }
    doLast {
        examples.each { example ->
            try {
                exec {
                    workingDir project.projectDir
                    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
                        commandLine 'cmd', '/c', "${ballerinaDist}/bin/bal.bat test ${graalvmFlag} ${example} && exit %%ERRORLEVEL%%"
                    } else {
                        commandLine 'sh', '-c', "${ballerinaDist}/bin/bal test ${graalvmFlag} ${example}"
                    }
                }
            } catch (Exception e) {
                println("Example '${example}' Build failed: " + e.message)
                throw e
            }
        }
    }
}

task buildExamples {
    gradle.taskGraph.whenReady { graph ->
        if (graph.hasTask(":ldap-examples:test")) {
            buildExamples.enabled = false
        } else {
            testExamples.enabled = false
        }
    }
    doLast {
        examples.each { example ->
            try {
                exec {
                    workingDir project.projectDir
                    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
                        commandLine 'cmd', '/c', "${ballerinaDist}/bin/bal.bat build ${example} && exit %%ERRORLEVEL%%"
                    } else {
                        commandLine 'sh', '-c', "${ballerinaDist}/bin/bal build ${example}"
                    }
                }
            } catch (Exception e) {
                println("Example '${example}' Build failed: " + e.message)
                throw e
            }
        }
    }
}

task build {
    dependsOn buildExamples

}

task test {
    dependsOn testExamples
}

buildExamples.dependsOn ":ldap-ballerina:build"
testExamples.dependsOn ":ldap-ballerina:build"
